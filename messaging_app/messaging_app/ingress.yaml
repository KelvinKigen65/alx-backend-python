apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: django-messaging-ingress
  namespace: default
  annotations:
    nginx.ingress.kubernetes.io/rewrite-target: /
    nginx.ingress.kubernetes.io/ssl-redirect: "false"
    nginx.ingress.kubernetes.io/force-ssl-redirect: "false"
    # Optional: Enable CORS if needed
    nginx.ingress.kubernetes.io/enable-cors: "true"
    nginx.ingress.kubernetes.io/cors-allow-origin: "*"
    nginx.ingress.kubernetes.io/cors-allow-methods: "GET, POST, PUT, DELETE, OPTIONS"
    nginx.ingress.kubernetes.io/cors-allow-headers: "DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range,Authorization"
spec:
  ingressClassName: nginx
  rules:
  # Rule for localhost/IP access
  - host: localhost
    http:
      paths:
      # Route root path to Django app
      - path: /
        pathType: Prefix
        backend:
          service:
            name: django-messaging-service
            port:
              number: 80
      # Route API paths to Django app
      - path: /api
        pathType: Prefix
        backend:
          service:
            name: django-messaging-service
            port:
              number: 80
      # Route admin paths to Django app
      - path: /admin
        pathType: Prefix
        backend:
          service:
            name: django-messaging-service
            port:
              number: 80
  # Rule for custom domain (replace with your domain)
  - host: django-messaging.local
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: django-messaging-service
            port:
              number: 80
      - path: /api
        pathType: Prefix
        backend:
          service:
            name: django-messaging-service
            port:
              number: 80
      - path: /admin
        pathType: Prefix
        backend:
          service:
            name: django-messaging-service
            port:
              number: 80
---
# Service for Django app (create if it doesn't exist)
apiVersion: v1
kind: Service
metadata:
  name: django-messaging-service
  namespace: default
spec:
  selector:
    app: django-messaging-app
  ports:
  - port: 80
    targetPort: 8000
    protocol: TCP
  type: ClusterIP